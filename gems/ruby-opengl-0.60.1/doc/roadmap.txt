Roadmap
=======

* Write comprehensive API documentation
* Create more example code
* Add RMagick(ImageMagick) integration for easy image handling (textures,screenshots)
* Support all pixelstore modes (currently forced to default values by
  any function getting/setting data affected by it)

Possible Features
========
* Add **all** OpenGL extensions (some are obsolete or not really used or useful at all)
* Add direct mapping on ruby types for vertex arrays, buffers and image data to allow high performance data operations from within ruby
	- this should be modeled after Perl's OpenGL::Array
	- Update: preliminary tests shows that performance-wise there is no need for it, as the Ruby interpreter overhead is currently larger than immediate-mode calls overhead, so any potential speed gains are in domain of 1-5%. It still may be good idea from usability perspective, although that would require more comprehensive design, not just simple wrapper.
* Support for r/w VBO buffer mapping - gl(Un)MapBuffer (is it needed?)

<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
